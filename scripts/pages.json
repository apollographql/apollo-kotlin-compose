[{"name":"const val VERSION: String","description":"com.apollographql.compose.VERSION","location":"compose-support/com.apollographql.compose/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.compose.VERSION"]},{"name":"fun <D : Operation.Data> ApolloCall<D>.toState(context: CoroutineContext = EmptyCoroutineContext): State<ApolloResponse<D>?>","description":"com.apollographql.compose.toState","location":"compose-support/com.apollographql.compose/to-state.html","searchKeys":["toState","fun <D : Operation.Data> ApolloCall<D>.toState(context: CoroutineContext = EmptyCoroutineContext): State<ApolloResponse<D>?>","com.apollographql.compose.toState"]},{"name":"fun <D : Query.Data> ApolloCall<D>.watchAsState(context: CoroutineContext = EmptyCoroutineContext): State<ApolloResponse<D>?>","description":"com.apollographql.compose.watchAsState","location":"compose-support/com.apollographql.compose/watch-as-state.html","searchKeys":["watchAsState","fun <D : Query.Data> ApolloCall<D>.watchAsState(context: CoroutineContext = EmptyCoroutineContext): State<ApolloResponse<D>?>","com.apollographql.compose.watchAsState"]},{"name":"class ApolloPagingSource<Data : Operation.Data, Value : Any>(appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>) : PagingSource<ApolloCall<Data>, Value> ","description":"com.apollographql.compose.paging.ApolloPagingSource","location":"compose-paging-support/com.apollographql.compose.paging/-apollo-paging-source/index.html","searchKeys":["ApolloPagingSource","class ApolloPagingSource<Data : Operation.Data, Value : Any>(appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>) : PagingSource<ApolloCall<Data>, Value> ","com.apollographql.compose.paging.ApolloPagingSource"]},{"name":"const val VERSION: String","description":"com.apollographql.compose.paging.VERSION","location":"compose-paging-support/com.apollographql.compose.paging/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.compose.paging.VERSION"]},{"name":"constructor(appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>)","description":"com.apollographql.compose.paging.ApolloPagingSource.ApolloPagingSource","location":"compose-paging-support/com.apollographql.compose.paging/-apollo-paging-source/-apollo-paging-source.html","searchKeys":["ApolloPagingSource","constructor(appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>)","com.apollographql.compose.paging.ApolloPagingSource.ApolloPagingSource"]},{"name":"fun <Data : Operation.Data, Value : Any> Pager(config: PagingConfig, appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>): Pager<ApolloCall<Data>, Value>","description":"com.apollographql.compose.paging.Pager","location":"compose-paging-support/com.apollographql.compose.paging/-pager.html","searchKeys":["Pager","fun <Data : Operation.Data, Value : Any> Pager(config: PagingConfig, appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>): Pager<ApolloCall<Data>, Value>","com.apollographql.compose.paging.Pager"]},{"name":"fun <Data : Operation.Data, Value : Any> rememberAndCollectPager(config: PagingConfig, appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>): LazyPagingItems<Value>","description":"com.apollographql.compose.paging.rememberAndCollectPager","location":"compose-paging-support/com.apollographql.compose.paging/remember-and-collect-pager.html","searchKeys":["rememberAndCollectPager","fun <Data : Operation.Data, Value : Any> rememberAndCollectPager(config: PagingConfig, appendCall: suspend (response: ApolloResponse<Data>?, loadSize: Int) -> ApolloCall<Data>?, itemsAfter: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, prependCall: suspend (response: ApolloResponse<Data>, loadSize: Int) -> ApolloCall<Data>?? = null, itemsBefore: suspend (response: ApolloResponse<Data>, loadedItemsCount: Int) -> Int = { _, _ -> PagingSource.LoadResult.Page.COUNT_UNDEFINED }, getItems: suspend (response: ApolloResponse<Data>) -> Result<List<Value>>): LazyPagingItems<Value>","com.apollographql.compose.paging.rememberAndCollectPager"]},{"name":"open override fun getRefreshKey(state: PagingState<ApolloCall<Data>, Value>): ApolloCall<Data>?","description":"com.apollographql.compose.paging.ApolloPagingSource.getRefreshKey","location":"compose-paging-support/com.apollographql.compose.paging/-apollo-paging-source/get-refresh-key.html","searchKeys":["getRefreshKey","open override fun getRefreshKey(state: PagingState<ApolloCall<Data>, Value>): ApolloCall<Data>?","com.apollographql.compose.paging.ApolloPagingSource.getRefreshKey"]},{"name":"open suspend override fun load(params: PagingSource.LoadParams<ApolloCall<Data>>): PagingSource.LoadResult<ApolloCall<Data>, Value>","description":"com.apollographql.compose.paging.ApolloPagingSource.load","location":"compose-paging-support/com.apollographql.compose.paging/-apollo-paging-source/load.html","searchKeys":["load","open suspend override fun load(params: PagingSource.LoadParams<ApolloCall<Data>>): PagingSource.LoadResult<ApolloCall<Data>, Value>","com.apollographql.compose.paging.ApolloPagingSource.load"]}]